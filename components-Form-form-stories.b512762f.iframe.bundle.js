"use strict";(self.webpackChunkwood_ui=self.webpackChunkwood_ui||[]).push([[863],{"./src/components/Form/form.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ABasicForm:()=>ABasicForm,BRegForm:()=>BRegForm,CFullForm:()=>CFullForm,__namedExportsOrder:()=>__namedExportsOrder,default:()=>form_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist_web=__webpack_require__("./node_modules/async-validator/dist-web/index.js"),mapValues=__webpack_require__("./node_modules/lodash-es/mapValues.js"),forEach=__webpack_require__("./node_modules/lodash-es/forEach.js");function fieldsReducer(state,action){switch(action.type){case"addField":return{...state,[action.name]:{...action.value}};case"updateValue":return{...state,[action.name]:{...state[action.name],value:action.value}};case"updateValidateResult":const{isValid,errors}=action.value;return{...state,[action.name]:{...state[action.name],isValid,errors}};default:return state}}const Form_useStore=function useStore(initialValues){const[form,setForm]=(0,react.useState)({isValid:!0,isSubmitting:!1,errors:{}}),[fields,dispatch]=(0,react.useReducer)(fieldsReducer,{}),getFieldValue=key=>fields[key]&&fields[key].value,transfromRules=rules=>rules.map((rule=>{if("function"==typeof rule){return rule({getFieldValue})}return rule}));return{fields,dispatch,form,validateField:async name=>{const{value,rules}=fields[name],descriptor={[name]:transfromRules(rules)},valueMap={[name]:value},validator=new dist_web.Z(descriptor);let isValid=!0,errors=[];try{await validator.validate(valueMap)}catch(e){isValid=!1;const err=e;console.log("e",err.errors),console.log("fields",err.fields),errors=err.errors}finally{console.log("errors",isValid),dispatch({type:"updateValidateResult",name,value:{isValid,errors}})}},getFieldValue,validateAllFields:async()=>{let isValid=!0,errors={};const valueMap=(0,mapValues.Z)(fields,(item=>item.value)),descriptor=(0,mapValues.Z)(fields,(item=>transfromRules(item.rules))),validator=new dist_web.Z(descriptor);setForm({...form,isSubmitting:!0});try{await validator.validate(valueMap)}catch(e){isValid=!1;errors=e.fields,(0,forEach.Z)(fields,((value,name)=>{if(errors[name]){const itemErrors=errors[name];dispatch({type:"updateValidateResult",name,value:{isValid:!1,errors:itemErrors}})}else value.rules.length>0&&!errors[name]&&dispatch({type:"updateValidateResult",name,value:{isValid:!0,errors:[]}})}))}finally{return setForm({...form,isSubmitting:!1,isValid,errors}),{isValid,errors,values:valueMap}}},getFieldsValue:()=>(0,mapValues.Z)(fields,(item=>item.value)),setFieldValue:(name,value)=>{fields[name]&&dispatch({type:"updateValue",name,value})},resetFields:()=>{initialValues&&(0,forEach.Z)(initialValues,((value,name)=>{fields[name]&&dispatch({type:"updateValue",name,value})}))}}};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const FormContext=(0,react.createContext)({}),Form=(0,react.forwardRef)(((props,ref)=>{const{name,children,initialValues,onFinish,onFinishFailed}=props,{form,fields,dispatch,...restProps}=Form_useStore(initialValues),{validateField,validateAllFields}=restProps;(0,react.useImperativeHandle)(ref,(()=>({...restProps})));const passedContext={dispatch,fields,initialValues,validateField};let childrenNode;return childrenNode="function"==typeof children?children(form):children,(0,jsx_runtime.jsx)("form",{name,className:"wd-form",onSubmit:async e=>{e.preventDefault(),e.stopPropagation();const{isValid,errors,values}=await validateAllFields();isValid&&onFinish?onFinish(values):!isValid&&onFinishFailed&&onFinishFailed(values,errors)},children:(0,jsx_runtime.jsx)(FormContext.Provider,{value:passedContext,children:childrenNode})})}));Form.defaultProps={name:"viking_form"};const Form_form=Form;try{Form.displayName="Form",Form.__docgenInfo={description:"",displayName:"Form",props:{name:{defaultValue:{value:"viking_form"},description:"表单名称，会作为表单字段 id 前缀使用",name:"name",required:!1,type:{name:"string"}},initialValues:{defaultValue:null,description:"表单默认值，只有初始化以及重置时生效",name:"initialValues",required:!1,type:{name:"Record<string, any>"}},onFinish:{defaultValue:null,description:"提交表单且数据验证成功后回调事件",name:"onFinish",required:!1,type:{name:"((values: Record<string, any>) => void)"}},onFinishFailed:{defaultValue:null,description:"提交表单且数据验证失败后回调事件",name:"onFinishFailed",required:!1,type:{name:"((values: Record<string, any>, errors: Record<string, ValidateError[]>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Form/form.tsx#Form"]={docgenInfo:Form.__docgenInfo,name:"Form",path:"src/components/Form/form.tsx#Form"})}catch(__react_docgen_typescript_loader_error){}try{form.displayName="form",form.__docgenInfo={description:"",displayName:"form",props:{name:{defaultValue:{value:"viking_form"},description:"表单名称，会作为表单字段 id 前缀使用",name:"name",required:!1,type:{name:"string"}},initialValues:{defaultValue:null,description:"表单默认值，只有初始化以及重置时生效",name:"initialValues",required:!1,type:{name:"Record<string, any>"}},onFinish:{defaultValue:null,description:"提交表单且数据验证成功后回调事件",name:"onFinish",required:!1,type:{name:"((values: Record<string, any>) => void)"}},onFinishFailed:{defaultValue:null,description:"提交表单且数据验证失败后回调事件",name:"onFinishFailed",required:!1,type:{name:"((values: Record<string, any>, errors: Record<string, ValidateError[]>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Form/form.tsx#form"]={docgenInfo:form.__docgenInfo,name:"form",path:"src/components/Form/form.tsx#form"})}catch(__react_docgen_typescript_loader_error){}var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);const FormItem=props=>{const{label,children,name,valuePropName,trigger,getValueFromEvent,rules,validateTrigger}=props,{dispatch,fields,initialValues,validateField}=(0,react.useContext)(FormContext),rowClass=classnames_default()("wd-row",{"wd-row-no-label":!label});(0,react.useEffect)((()=>{const value=initialValues&&initialValues[name]||"";dispatch({type:"addField",name,value:{label,name,value,rules:rules||[],errors:[],isValid:!0}})}),[]);const fieldState=fields[name],value=fieldState&&fieldState.value,errors=fieldState&&fieldState.errors,isRequired=rules?.some((rule=>"function"!=typeof rule&&rule.required)),hasError=errors&&errors.length>0,labelClass=classnames_default()({"wd-form-item-required":isRequired}),itemClass=classnames_default()("wd-form-item-control",{"wd-form-item-has-error":hasError}),onValueValidate=async()=>{await validateField(name)},controlProps={};controlProps[valuePropName]=value,controlProps[trigger]=e=>{const value=getValueFromEvent(e);console.log("new value",value),dispatch({type:"updateValue",name,value})},rules&&(controlProps[validateTrigger]=onValueValidate);const childList=react.Children.toArray(children);0===childList.length&&console.error("No child element found in Form.Item, please provide one form component"),childList.length>1&&console.warn("Only support one child element in Form.Item, others will be omitted"),react.isValidElement(childList[0])||console.error("Child component is not a valid React Element");const child=childList[0],returnChildNode=react.cloneElement(child,{...child.props,...controlProps});return(0,jsx_runtime.jsxs)("div",{className:rowClass,children:[label&&(0,jsx_runtime.jsx)("div",{className:"wd-form-item-label",children:(0,jsx_runtime.jsx)("label",{title:label,className:labelClass,children:label})}),(0,jsx_runtime.jsxs)("div",{className:"wd-form-item",children:[(0,jsx_runtime.jsx)("div",{className:itemClass,children:returnChildNode}),hasError&&(0,jsx_runtime.jsx)("div",{className:"wd-form-item-explain",children:(0,jsx_runtime.jsx)("span",{children:errors[0].message})})]})]})};FormItem.displayName="FormItem",FormItem.defaultProps={valuePropName:"value",trigger:"onChange",validateTrigger:"onBlur",getValueFromEvent:e=>e.target.value};const Form_formItem=FormItem;try{FormItem.displayName="FormItem",FormItem.__docgenInfo={description:"",displayName:"FormItem",props:{name:{defaultValue:null,description:"字段名",name:"name",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"label 标签的文本",name:"label",required:!1,type:{name:"string"}},valuePropName:{defaultValue:{value:"value"},description:"子节点的值的属性，如 checkbox 的是 'checked'",name:"valuePropName",required:!1,type:{name:"string"}},trigger:{defaultValue:{value:"onChange"},description:"设置收集字段值变更的时机",name:"trigger",required:!1,type:{name:"string"}},getValueFromEvent:{defaultValue:{value:"(e) => e.target.value"},description:"设置如何将 event 的值转换成字段值",name:"getValueFromEvent",required:!1,type:{name:"((event: any) => any)"}},rules:{defaultValue:null,description:"校验规则，设置字段的校验逻辑。请看 async validator 了解更多规则",name:"rules",required:!1,type:{name:"CustomRule[]"}},validateTrigger:{defaultValue:{value:"onBlur"},description:"设置字段校验的时机",name:"validateTrigger",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Form/formItem.tsx#FormItem"]={docgenInfo:FormItem.__docgenInfo,name:"FormItem",path:"src/components/Form/formItem.tsx#FormItem"})}catch(__react_docgen_typescript_loader_error){}try{formItem.displayName="formItem",formItem.__docgenInfo={description:"",displayName:"formItem",props:{name:{defaultValue:null,description:"字段名",name:"name",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"label 标签的文本",name:"label",required:!1,type:{name:"string"}},valuePropName:{defaultValue:{value:"value"},description:"子节点的值的属性，如 checkbox 的是 'checked'",name:"valuePropName",required:!1,type:{name:"string"}},trigger:{defaultValue:{value:"onChange"},description:"设置收集字段值变更的时机",name:"trigger",required:!1,type:{name:"string"}},getValueFromEvent:{defaultValue:{value:"(e) => e.target.value"},description:"设置如何将 event 的值转换成字段值",name:"getValueFromEvent",required:!1,type:{name:"((event: any) => any)"}},rules:{defaultValue:null,description:"校验规则，设置字段的校验逻辑。请看 async validator 了解更多规则",name:"rules",required:!1,type:{name:"CustomRule[]"}},validateTrigger:{defaultValue:{value:"onBlur"},description:"设置字段校验的时机",name:"validateTrigger",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Form/formItem.tsx#formItem"]={docgenInfo:formItem.__docgenInfo,name:"formItem",path:"src/components/Form/formItem.tsx#formItem"})}catch(__react_docgen_typescript_loader_error){}var Input=__webpack_require__("./src/components/Input/index.tsx"),Button=__webpack_require__("./src/components/Button/index.tsx"),Select=__webpack_require__("./src/components/Select/index.tsx");const form_stories={title:"Form",id:"Form",component:Form_form,subcomponents:{Item:Form_formItem},decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{width:"550px"},children:(0,jsx_runtime.jsx)(Story,{})})],parameters:{docs:{source:{type:"code"}}}},confirmRules=[{type:"string",required:!0,min:3,max:8},({getFieldValue})=>({asyncValidator:(rule,value)=>(console.log("the value",getFieldValue("password")),console.log(value),new Promise(((resolve,reject)=>{value!==getFieldValue("password")&&reject("The two passwords that you entered do not match!"),setTimeout((()=>{resolve()}),1e3)})))})],ABasicForm=args=>(0,jsx_runtime.jsxs)(Form_form,{...args,children:[(0,jsx_runtime.jsx)(Form_formItem,{label:"用户名",name:"name",rules:[{type:"string",required:!0,min:3}],children:(0,jsx_runtime.jsx)(Input.Z,{})}),(0,jsx_runtime.jsx)(Form_formItem,{label:"密码",name:"password",rules:[{type:"string",required:!0,min:3,max:8}],children:(0,jsx_runtime.jsx)(Input.Z,{type:"password"})}),(0,jsx_runtime.jsx)("div",{className:"wd-form-submit-area",children:(0,jsx_runtime.jsx)(Button.Z,{type:"submit",btnType:"primary",children:"登陆"})})]});ABasicForm.displayName="ABasicForm",ABasicForm.storyName="基本的登录表单";const BRegForm=args=>(0,jsx_runtime.jsxs)(Form_form,{...args,initialValues:{agreement:!1},children:[(0,jsx_runtime.jsx)(Form_formItem,{label:"邮件",name:"email",rules:[{type:"email",required:!0}],children:(0,jsx_runtime.jsx)(Input.Z,{})}),(0,jsx_runtime.jsx)(Form_formItem,{label:"密码",name:"password",rules:[{type:"string",required:!0,min:3,max:8}],children:(0,jsx_runtime.jsx)(Input.Z,{type:"password"})}),(0,jsx_runtime.jsx)(Form_formItem,{label:"性别",name:"gender",rules:[{type:"string",required:!0}],getValueFromEvent:e=>e,valuePropName:"defaultValue",children:(0,jsx_runtime.jsxs)(Select.Z,{placeholder:"请选择性别",children:[(0,jsx_runtime.jsx)(Select.Z.Option,{value:"男"}),(0,jsx_runtime.jsx)(Select.Z.Option,{value:"女"})]})}),(0,jsx_runtime.jsxs)("div",{className:"agreement-section",style:{display:"flex",justifyContent:"center"},children:[(0,jsx_runtime.jsx)(Form_formItem,{name:"agreement",rules:[{type:"enum",enum:[!0],message:"请同意协议"}],getValueFromEvent:e=>e.target.checked,valuePropName:"checked",children:(0,jsx_runtime.jsx)("input",{type:"checkbox"})}),(0,jsx_runtime.jsxs)("span",{className:"agree-text",children:["注册即代表你同意",(0,jsx_runtime.jsx)("a",{href:"#",children:"用户协议"})]})]}),(0,jsx_runtime.jsx)("div",{className:"wd-form-submit-area",children:(0,jsx_runtime.jsx)(Button.Z,{type:"submit",btnType:"primary",children:"登陆"})})]});BRegForm.displayName="BRegForm",BRegForm.storyName="注册表单，支持多种 FormItem 组件";const CFullForm=args=>{const ref=(0,react.useRef)(),resetAll=()=>{console.log("form ref",ref.current),console.log("get value",ref.current?.getFieldValue("username")),ref.current?.resetFields()};return(0,jsx_runtime.jsx)(Form_form,{initialValues:{username:"viking",agreement:!1},...args,ref,children:({isValid,isSubmitting})=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Form_formItem,{label:"用户名",name:"username",rules:[{type:"email",required:!0}],children:(0,jsx_runtime.jsx)(Input.Z,{})}),(0,jsx_runtime.jsx)(Form_formItem,{label:"密码",name:"password",rules:[{type:"string",required:!0,min:3,max:8}],children:(0,jsx_runtime.jsx)(Input.Z,{type:"password"})}),(0,jsx_runtime.jsx)(Form_formItem,{label:"重复密码",name:"confirmPwd",rules:confirmRules,children:(0,jsx_runtime.jsx)(Input.Z,{type:"password"})}),(0,jsx_runtime.jsxs)("div",{className:"agreement-section",style:{display:"flex",justifyContent:"center"},children:[(0,jsx_runtime.jsx)(Form_formItem,{name:"agreement",valuePropName:"checked",getValueFromEvent:e=>e.target.checked,rules:[{type:"enum",enum:[!0],message:"请同意协议"}],children:(0,jsx_runtime.jsx)("input",{type:"checkbox"})}),(0,jsx_runtime.jsxs)("span",{className:"agree-text",children:["注册即代表你同意",(0,jsx_runtime.jsx)("a",{href:"#",children:"用户协议"})]})]}),(0,jsx_runtime.jsxs)("div",{className:"wd-form-submit-area",children:[(0,jsx_runtime.jsxs)(Button.Z,{type:"submit",btnType:"primary",children:["登陆 ",isSubmitting?"验证中":"验证完毕"," ",isValid?"通过😄":"没通过😢"," "]}),(0,jsx_runtime.jsx)(Button.Z,{type:"button",onClick:resetAll,children:"重置"})]})]})})};CFullForm.displayName="CFullForm",CFullForm.storyName="自定义规则，调用表单实例",ABasicForm.parameters={...ABasicForm.parameters,docs:{...ABasicForm.parameters?.docs,source:{originalSource:"args => {\n  return <Form {...args}>\n      <Item label='用户名' name='name' rules={[{\n      type: 'string',\n      required: true,\n      min: 3\n    }]}>\n        <Input />\n      </Item>\n      <Item label='密码' name='password' rules={[{\n      type: 'string',\n      required: true,\n      min: 3,\n      max: 8\n    }]}>\n        <Input type=\"password\" />\n      </Item>\n      <div className='wd-form-submit-area'>\n        <Button type=\"submit\" btnType='primary'>登陆</Button>\n      </div>\n    </Form>;\n}",...ABasicForm.parameters?.docs?.source}}},BRegForm.parameters={...BRegForm.parameters,docs:{...BRegForm.parameters?.docs,source:{originalSource:"args => {\n  const initialValues = {\n    agreement: false\n  };\n  return <Form {...args} initialValues={initialValues}>\n      <Item label='邮件' name='email' rules={[{\n      type: 'email',\n      required: true\n    }]}>\n        <Input />\n      </Item>\n      <Item label='密码' name='password' rules={[{\n      type: 'string',\n      required: true,\n      min: 3,\n      max: 8\n    }]}>\n        <Input type=\"password\" />\n      </Item>\n      <Item label='性别' name='gender' rules={[{\n      type: 'string',\n      required: true\n    }]} getValueFromEvent={e => e} valuePropName='defaultValue'>\n        <Select placeholder=\"请选择性别\">\n          <Select.Option value=\"男\" />\n          <Select.Option value=\"女\" />\n        </Select>\n      </Item>\n      <div className='agreement-section' style={{\n      'display': 'flex',\n      'justifyContent': 'center'\n    }}>\n        <Item name='agreement' rules={[{\n        type: 'enum',\n        enum: [true],\n        message: '请同意协议'\n      }]} getValueFromEvent={e => e.target.checked} valuePropName='checked'>\n          <input type=\"checkbox\" />\n        </Item>\n        <span className=\"agree-text\">注册即代表你同意<a href='#'>用户协议</a></span>\n      </div>\n      <div className='wd-form-submit-area'>\n        <Button type=\"submit\" btnType='primary'>登陆</Button>\n      </div>\n    </Form>;\n}",...BRegForm.parameters?.docs?.source}}},CFullForm.parameters={...CFullForm.parameters,docs:{...CFullForm.parameters?.docs,source:{originalSource:"args => {\n  const ref = useRef<IFormRef>();\n  const resetAll = () => {\n    console.log('form ref', ref.current);\n    console.log('get value', ref.current?.getFieldValue('username'));\n    ref.current?.resetFields();\n  };\n  return <Form initialValues={{\n    username: 'viking',\n    agreement: false\n  }} {...args} ref={ref}>\n      {({\n      isValid,\n      isSubmitting\n    }) => <>\n      <Item label='用户名' name='username' rules={[{\n        type: 'email',\n        required: true\n      }]}>\n        <Input />\n      </Item>\n      <Item label='密码' name='password' rules={[{\n        type: 'string',\n        required: true,\n        min: 3,\n        max: 8\n      }]}>\n        <Input type='password' />\n      </Item>\n      <Item label='重复密码' name='confirmPwd' rules={confirmRules}>\n        <Input type='password' />\n      </Item>\n      <div className='agreement-section' style={{\n        'display': 'flex',\n        'justifyContent': 'center'\n      }}>\n        <Item name='agreement' valuePropName='checked' getValueFromEvent={e => e.target.checked} rules={[{\n          type: 'enum',\n          enum: [true],\n          message: '请同意协议'\n        }]}>\n          <input type=\"checkbox\" />\n        </Item>\n        <span className=\"agree-text\">注册即代表你同意<a href='#'>用户协议</a></span>\n      </div>\n      <div className='wd-form-submit-area'>\n        <Button type=\"submit\" btnType='primary'>登陆 {isSubmitting ? '验证中' : '验证完毕'} {isValid ? '通过😄' : '没通过😢'} </Button>\n        <Button type=\"button\" onClick={resetAll}>重置</Button>\n      </div>\n      </>}\n    </Form>;\n}",...CFullForm.parameters?.docs?.source}}};const __namedExportsOrder=["ABasicForm","BRegForm","CFullForm"];try{ABasicForm.displayName="ABasicForm",ABasicForm.__docgenInfo={description:"",displayName:"ABasicForm",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Form/form.stories.tsx#ABasicForm"]={docgenInfo:ABasicForm.__docgenInfo,name:"ABasicForm",path:"src/components/Form/form.stories.tsx#ABasicForm"})}catch(__react_docgen_typescript_loader_error){}try{BRegForm.displayName="BRegForm",BRegForm.__docgenInfo={description:"",displayName:"BRegForm",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Form/form.stories.tsx#BRegForm"]={docgenInfo:BRegForm.__docgenInfo,name:"BRegForm",path:"src/components/Form/form.stories.tsx#BRegForm"})}catch(__react_docgen_typescript_loader_error){}try{CFullForm.displayName="CFullForm",CFullForm.__docgenInfo={description:"",displayName:"CFullForm",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Form/form.stories.tsx#CFullForm"]={docgenInfo:CFullForm.__docgenInfo,name:"CFullForm",path:"src/components/Form/form.stories.tsx#CFullForm"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Button/button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=props=>{const{btnType,className,disabled,size,children,href,...restProps}=props,classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("btn",className,{[`btn-${btnType}`]:btnType,[`btn-${size}`]:size,disabled:"link"===btnType&&disabled});return"link"===btnType&&href?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("a",{className:classes,href,...restProps,children}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{className:classes,disabled,...restProps,children})};Button.defaultProps={disabled:!1,btnType:"default"};const __WEBPACK_DEFAULT_EXPORT__=Button;try{Button.displayName="Button",Button.__docgenInfo={description:"页面中最常用的的按钮元素，适合于完成特定的交互，支持 HTML button 和 a 链接 的所有属性\n### 引用方法\n\n```javascript\nimport { Button } from 'wood-ui'\n```",displayName:"Button",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"设置 Button 的禁用",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"设置 Button 的尺寸",name:"size",required:!1,type:{name:"enum",value:[{value:'"lg"'},{value:'"sm"'}]}},btnType:{defaultValue:{value:"default"},description:"设置 Button 的类型",name:"btnType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"danger"'},{value:'"link"'},{value:'"default"'}]}},href:{defaultValue:null,description:"",name:"href",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/Button/button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}try{button.displayName="button",button.__docgenInfo={description:"页面中最常用的的按钮元素，适合于完成特定的交互，支持 HTML button 和 a 链接 的所有属性\n### 引用方法\n\n```javascript\nimport { Button } from 'wood-ui'\n```",displayName:"button",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"设置 Button 的禁用",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"设置 Button 的尺寸",name:"size",required:!1,type:{name:"enum",value:[{value:'"lg"'},{value:'"sm"'}]}},btnType:{defaultValue:{value:"default"},description:"设置 Button 的类型",name:"btnType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"danger"'},{value:'"link"'},{value:'"default"'}]}},href:{defaultValue:null,description:"",name:"href",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/button.tsx#button"]={docgenInfo:button.__docgenInfo,name:"button",path:"src/components/Button/button.tsx#button"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Button/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/components/Button/button.tsx").Z;try{Button.displayName="Button",Button.__docgenInfo={description:"页面中最常用的的按钮元素，适合于完成特定的交互，支持 HTML button 和 a 链接 的所有属性\n### 引用方法\n\n```javascript\nimport { Button } from 'wood-ui'\n```",displayName:"Button",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"设置 Button 的禁用",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"设置 Button 的尺寸",name:"size",required:!1,type:{name:"enum",value:[{value:'"lg"'},{value:'"sm"'}]}},btnType:{defaultValue:{value:"default"},description:"设置 Button 的类型",name:"btnType",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"danger"'},{value:'"link"'},{value:'"default"'}]}},href:{defaultValue:null,description:"",name:"href",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/index.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/Button/index.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Icon/icon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@fortawesome/react-fontawesome/index.es.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Icon=props=>{const{className,theme,...restProps}=props,classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("wd-icon",className,{[`icon-${theme}`]:theme});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__.G,{className:classes,...restProps})};Icon.displayName="Icon";const __WEBPACK_DEFAULT_EXPORT__=Icon;try{Icon.displayName="Icon",Icon.__docgenInfo={description:"提供了一套常用的图标集合 基于 react-fontawesome。\n\n支持 react-fontawesome的所有属性 可以在这里查询 https://github.com/FortAwesome/react-fontawesome#basic\n\n支持 fontawesome 所有 free-solid-icons，可以在这里查看所有图标 https://fontawesome.com/icons?d=gallery&s=solid&m=free\n### 引用方法\n\n~~~js\nimport { Icon } from 'wood-ui'\n~~~",displayName:"Icon",props:{theme:{defaultValue:null,description:"支持框架主题 根据主题显示不同的颜色",name:"theme",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"info"'},{value:'"warning"'},{value:'"danger"'},{value:'"light"'},{value:'"dark"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Icon/icon.tsx#Icon"]={docgenInfo:Icon.__docgenInfo,name:"Icon",path:"src/components/Icon/icon.tsx#Icon"})}catch(__react_docgen_typescript_loader_error){}try{icon.displayName="icon",icon.__docgenInfo={description:"提供了一套常用的图标集合 基于 react-fontawesome。\n\n支持 react-fontawesome的所有属性 可以在这里查询 https://github.com/FortAwesome/react-fontawesome#basic\n\n支持 fontawesome 所有 free-solid-icons，可以在这里查看所有图标 https://fontawesome.com/icons?d=gallery&s=solid&m=free\n### 引用方法\n\n~~~js\nimport { Icon } from 'wood-ui'\n~~~",displayName:"icon",props:{theme:{defaultValue:null,description:"支持框架主题 根据主题显示不同的颜色",name:"theme",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"info"'},{value:'"warning"'},{value:'"danger"'},{value:'"light"'},{value:'"dark"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Icon/icon.tsx#icon"]={docgenInfo:icon.__docgenInfo,name:"icon",path:"src/components/Icon/icon.tsx#icon"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Icon/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/components/Icon/icon.tsx").Z;try{Icon.displayName="Icon",Icon.__docgenInfo={description:"提供了一套常用的图标集合 基于 react-fontawesome。\n\n支持 react-fontawesome的所有属性 可以在这里查询 https://github.com/FortAwesome/react-fontawesome#basic\n\n支持 fontawesome 所有 free-solid-icons，可以在这里查看所有图标 https://fontawesome.com/icons?d=gallery&s=solid&m=free\n### 引用方法\n\n~~~js\nimport { Icon } from 'wood-ui'\n~~~",displayName:"Icon",props:{theme:{defaultValue:null,description:"支持框架主题 根据主题显示不同的颜色",name:"theme",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"info"'},{value:'"warning"'},{value:'"danger"'},{value:'"light"'},{value:'"dark"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Icon/index.tsx#Icon"]={docgenInfo:Icon.__docgenInfo,name:"Icon",path:"src/components/Icon/index.tsx#Icon"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Input/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/components/Input/input.tsx").Z;try{Input.displayName="Input",Input.__docgenInfo={description:"Input 输入框 通过鼠标或键盘输入内容，是最基础的表单域的包装。\n\n~~~js\n// 这样引用\nimport { Input } from 'wood-ui'\n~~~\n\n支持 HTMLInput 的所有基本属性",displayName:"Input",props:{disabled:{defaultValue:null,description:"是否禁用 Input",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"设置 input 大小，支持 lg 或者是 sm",name:"size",required:!1,type:{name:"enum",value:[{value:'"lg"'},{value:'"sm"'}]}},icon:{defaultValue:null,description:"添加图标，在右侧悬浮添加一个图标，用于提示",name:"icon",required:!1,type:{name:"IconProp"}},prepend:{defaultValue:null,description:"添加前缀 用于配置一些固定组合",name:"prepend",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},append:{defaultValue:null,description:"添加后缀 用于配置一些固定组合",name:"append",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Input/index.tsx#Input"]={docgenInfo:Input.__docgenInfo,name:"Input",path:"src/components/Input/index.tsx#Input"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Input/input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{I:()=>Input,Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_Icon_icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Icon/icon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Input=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(((props,ref)=>{const{disabled,size,icon,prepend,append,style,...restProps}=props,cnames=classnames__WEBPACK_IMPORTED_MODULE_1___default()("wd-input-wrapper",{[`input-size-${size}`]:size,"is-disabled":disabled,"input-group":prepend||append,"input-group-append":!!append,"input-group-prepend":!!prepend});var value;return"value"in props&&(delete restProps.defaultValue,restProps.value=null==(value=props.value)?"":value),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:cnames,style,children:[prepend&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"wd-input-group-prepend",children:prepend}),icon&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"icon-wrapper",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_Icon_icon__WEBPACK_IMPORTED_MODULE_2__.Z,{icon,title:`title-${icon}`})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("input",{ref,className:"wd-input-inner",disabled,...restProps}),append&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"wd-input-group-append",children:append})]})})),__WEBPACK_DEFAULT_EXPORT__=Input;try{Input.displayName="Input",Input.__docgenInfo={description:"Input 输入框 通过鼠标或键盘输入内容，是最基础的表单域的包装。\n\n~~~js\n// 这样引用\nimport { Input } from 'wood-ui'\n~~~\n\n支持 HTMLInput 的所有基本属性",displayName:"Input",props:{disabled:{defaultValue:null,description:"是否禁用 Input",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"设置 input 大小，支持 lg 或者是 sm",name:"size",required:!1,type:{name:"enum",value:[{value:'"lg"'},{value:'"sm"'}]}},icon:{defaultValue:null,description:"添加图标，在右侧悬浮添加一个图标，用于提示",name:"icon",required:!1,type:{name:"IconProp"}},prepend:{defaultValue:null,description:"添加前缀 用于配置一些固定组合",name:"prepend",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},append:{defaultValue:null,description:"添加后缀 用于配置一些固定组合",name:"append",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Input/input.tsx#Input"]={docgenInfo:Input.__docgenInfo,name:"Input",path:"src/components/Input/input.tsx#Input"})}catch(__react_docgen_typescript_loader_error){}try{input.displayName="input",input.__docgenInfo={description:"Input 输入框 通过鼠标或键盘输入内容，是最基础的表单域的包装。\n\n~~~js\n// 这样引用\nimport { Input } from 'wood-ui'\n~~~\n\n支持 HTMLInput 的所有基本属性",displayName:"input",props:{disabled:{defaultValue:null,description:"是否禁用 Input",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"设置 input 大小，支持 lg 或者是 sm",name:"size",required:!1,type:{name:"enum",value:[{value:'"lg"'},{value:'"sm"'}]}},icon:{defaultValue:null,description:"添加图标，在右侧悬浮添加一个图标，用于提示",name:"icon",required:!1,type:{name:"IconProp"}},prepend:{defaultValue:null,description:"添加前缀 用于配置一些固定组合",name:"prepend",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},append:{defaultValue:null,description:"添加后缀 用于配置一些固定组合",name:"append",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Input/input.tsx#input"]={docgenInfo:input.__docgenInfo,name:"input",path:"src/components/Input/input.tsx#input"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Select/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>components_Select});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),Input=__webpack_require__("./src/components/Input/index.tsx"),Icon=__webpack_require__("./src/components/Icon/index.tsx"),useClickOutside=__webpack_require__("./src/hooks/useClickOutside.tsx"),transition=__webpack_require__("./src/components/Transition/transition.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const SelectContext=(0,react.createContext)({selectedValues:[]}),Select=props=>{const{defaultValue,placeholder,children,multiple,name,disabled,onChange,onVisibleChange}=props,input=(0,react.useRef)(null),containerRef=(0,react.useRef)(null),containerWidth=(0,react.useRef)(0),[selectedValues,setSelectedValues]=(0,react.useState)(Array.isArray(defaultValue)?defaultValue:[]),[menuOpen,setOpen]=(0,react.useState)(!1),[value,setValue]=(0,react.useState)("string"==typeof defaultValue?defaultValue:""),handleOptionClick=(value,isSelected)=>{multiple?setValue(""):(setOpen(!1),setValue(value),onVisibleChange&&onVisibleChange(!1));let updatedValues=[value];multiple&&(updatedValues=isSelected?selectedValues.filter((v=>v!==value)):[...selectedValues,value],setSelectedValues(updatedValues)),onChange&&onChange(value,updatedValues)};(0,react.useEffect)((()=>{input.current&&(input.current.focus(),multiple&&selectedValues.length>0?input.current.placeholder="":placeholder&&(input.current.placeholder=placeholder))}),[selectedValues,multiple,placeholder]),(0,react.useEffect)((()=>{containerRef.current&&(containerWidth.current=containerRef.current.getBoundingClientRect().width)})),(0,useClickOutside.Z)(containerRef,(()=>{setOpen(!1),onVisibleChange&&menuOpen&&onVisibleChange(!1)}));const passedContext={onSelect:handleOptionClick,selectedValues,multiple},containerClass=classnames_default()("wd-select",{"menu-is-open":menuOpen,"is-disabled":disabled,"is-multiple":multiple});return(0,jsx_runtime.jsxs)("div",{className:containerClass,ref:containerRef,children:[(0,jsx_runtime.jsx)("div",{className:"wd-select-input",onClick:e=>{e.preventDefault(),disabled||(setOpen(!menuOpen),onVisibleChange&&onVisibleChange(!menuOpen))},children:(0,jsx_runtime.jsx)(Input.Z,{ref:input,placeholder,value,readOnly:!0,icon:"angle-down",disabled,name})}),(0,jsx_runtime.jsx)(SelectContext.Provider,{value:passedContext,children:(0,jsx_runtime.jsx)(transition.Z,{in:menuOpen,animation:"zoom-in-top",timeout:300,children:(0,jsx_runtime.jsx)("ul",{className:"wd-select-dropdown",children:react.Children.map(children,((child,i)=>{const childElement=child;if("Option"===childElement.type.displayName)return react.cloneElement(childElement,{index:`select-${i}`});console.error("Warning: Select has a child which is not a Option component")}))})})}),multiple&&(0,jsx_runtime.jsx)("div",{className:"wd-selected-tags",style:{maxWidth:containerWidth.current-32},children:selectedValues.map(((value,index)=>(0,jsx_runtime.jsxs)("span",{className:"wd-tag",children:[value,(0,jsx_runtime.jsx)(Icon.Z,{icon:"times",onClick:()=>{handleOptionClick(value,!0)}})]},`tag-${index}`)))})]})};Select.displayName="Select",Select.defaultProps={name:"wd-select",placeholder:"请选择"};const Select_select=Select;try{Select.displayName="Select",Select.__docgenInfo={description:"下拉选择器。\n弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。\n### 引用方法\n\n~~~js\nimport { Select } from 'wood-ui'\n// 然后可以使用 <Select> 和 <Select.Option>\n~~~",displayName:"Select",props:{defaultValue:{defaultValue:null,description:"指定默认选中的条目\t 可以是是字符串或者字符串数组",name:"defaultValue",required:!1,type:{name:"string | string[]"}},placeholder:{defaultValue:{value:"请选择"},description:"选择框默认文字",name:"placeholder",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"是否禁用",name:"disabled",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"是否支持多选",name:"multiple",required:!1,type:{name:"boolean"}},name:{defaultValue:{value:"wd-select"},description:"select input 的 name 属性",name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"选中值发生变化时触发",name:"onChange",required:!1,type:{name:"((selectedValue: string, selectedValues: string[]) => void)"}},onVisibleChange:{defaultValue:null,description:"下拉框出现/隐藏时触发",name:"onVisibleChange",required:!1,type:{name:"((visible: boolean) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Select/select.tsx#Select"]={docgenInfo:Select.__docgenInfo,name:"Select",path:"src/components/Select/select.tsx#Select"})}catch(__react_docgen_typescript_loader_error){}try{select.displayName="select",select.__docgenInfo={description:"下拉选择器。\n弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。\n### 引用方法\n\n~~~js\nimport { Select } from 'wood-ui'\n// 然后可以使用 <Select> 和 <Select.Option>\n~~~",displayName:"select",props:{defaultValue:{defaultValue:null,description:"指定默认选中的条目\t 可以是是字符串或者字符串数组",name:"defaultValue",required:!1,type:{name:"string | string[]"}},placeholder:{defaultValue:{value:"请选择"},description:"选择框默认文字",name:"placeholder",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"是否禁用",name:"disabled",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"是否支持多选",name:"multiple",required:!1,type:{name:"boolean"}},name:{defaultValue:{value:"wd-select"},description:"select input 的 name 属性",name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"选中值发生变化时触发",name:"onChange",required:!1,type:{name:"((selectedValue: string, selectedValues: string[]) => void)"}},onVisibleChange:{defaultValue:null,description:"下拉框出现/隐藏时触发",name:"onVisibleChange",required:!1,type:{name:"((visible: boolean) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Select/select.tsx#select"]={docgenInfo:select.__docgenInfo,name:"select",path:"src/components/Select/select.tsx#select"})}catch(__react_docgen_typescript_loader_error){}const Option=({value,label,disabled,children,index})=>{const{onSelect,selectedValues,multiple}=(0,react.useContext)(SelectContext),isSelected=selectedValues.includes(value),classes=classnames_default()("wd-select-item",{"is-disabled":disabled,"is-selected":isSelected});return(0,jsx_runtime.jsxs)("li",{className:classes,onClick:e=>{((e,value,isSelected)=>{e.preventDefault(),onSelect&&!disabled&&onSelect(value,isSelected)})(e,value,isSelected)},children:[children||label||value,multiple&&isSelected&&(0,jsx_runtime.jsx)(Icon.Z,{icon:"check"})]},index)};Option.displayName="Option",Option.displayName="Option";const Select_option=Option;try{Option.displayName="Option",Option.__docgenInfo={description:"",displayName:"Option",props:{index:{defaultValue:null,description:"",name:"index",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"默认根据此属性值进行筛选，该值不能相同",name:"value",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"选项的标签，若不设置则默认与 value 相同",name:"label",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"是否禁用该选项",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Select/option.tsx#Option"]={docgenInfo:Option.__docgenInfo,name:"Option",path:"src/components/Select/option.tsx#Option"})}catch(__react_docgen_typescript_loader_error){}const TransSelect=Select_select;TransSelect.Option=Select_option;const components_Select=TransSelect},"./src/components/Transition/transition.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_transition_group__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-transition-group/esm/CSSTransition.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Transition=props=>{const{children,classNames,animation,wrapper,...restProps}=props;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_transition_group__WEBPACK_IMPORTED_MODULE_2__.Z,{classNames:classNames||animation,...restProps,children:wrapper?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{children}):children})};Transition.displayName="Transition",Transition.defaultProps={unmountOnExit:!0,appear:!0};const __WEBPACK_DEFAULT_EXPORT__=Transition;try{transition.displayName="transition",transition.__docgenInfo={description:"",displayName:"transition",props:{classNames:{defaultValue:null,description:"The animation `classNames` applied to the component as it enters or exits.\nA single name can be provided and it will be suffixed for each stage: e.g.\n\n`classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`,\n`fade-exit`, `fade-exit-active`, `fade-appear`, and `fade-appear-active`.\n\nEach individual classNames can also be specified independently like:\n\n```js\nclassNames={{\n  appear: 'my-appear',\n  appearActive: 'my-appear-active',\n  appearDone: 'my-appear-done',\n  enter: 'my-enter',\n  enterActive: 'my-enter-active',\n  enterDone: 'my-enter-done',\n  exit: 'my-exit',\n  exitActive: 'my-exit-active',\n  exitDone: 'my-exit-done'\n}}\n```",name:"classNames",required:!1,type:{name:"string | CSSTransitionClassNames"}},animation:{defaultValue:null,description:"",name:"animation",required:!1,type:{name:"enum",value:[{value:'"zoom-in-top"'},{value:'"zoom-in-left"'},{value:'"zoom-in-bottom"'},{value:'"zoom-in-right"'}]}},wrapper:{defaultValue:null,description:"",name:"wrapper",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Transition/transition.tsx#transition"]={docgenInfo:transition.__docgenInfo,name:"transition",path:"src/components/Transition/transition.tsx#transition"})}catch(__react_docgen_typescript_loader_error){}},"./src/hooks/useClickOutside.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=function useClickOutside(ref,handler){(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const listener=event=>{ref.current&&!ref.current.contains(event.target)&&handler(event)};return document.addEventListener("click",listener),()=>{document.removeEventListener("click",listener)}}),[ref,handler])}}}]);